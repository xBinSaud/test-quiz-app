{
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        100,
        300
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "minutesInterval": 1
            }
          ]
        }
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        300,
        300
      ]
    },
    {
      "parameters": {
        "url": "https://api.example.com/quizzes",
        "method": "GET",
        "authentication": "none"
      },
      "name": "Fetch Quiz Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        500,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.status }}",
              "operation": "equal",
              "value2": "success"
            }
          ]
        }
      },
      "name": "Check Response",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        700,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "result",
              "value": "success"
            },
            {
              "name": "data",
              "value": "={{ $json.data }}"
            }
          ]
        }
      },
      "name": "Process Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "result",
              "value": "error"
            },
            {
              "name": "message",
              "value": "={{ $json.message }}"
            }
          ]
        }
      },
      "name": "Process Error",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "functionCode": "// This function would process the quiz data and save it to Firebase\nconst data = $input.all()[0].json.data;\n\n// Simulate processing\nconst processed = data.map(item => {\n  return {\n    ...item,\n    processed: true,\n    timestamp: new Date().toISOString()\n  };\n});\n\nreturn [\n  {\n    json: {\n      success: true,\n      processedItems: processed.length,\n      data: processed\n    }\n  }\n];"
      },
      "name": "Process Quiz Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1100,
        200
      ]
    },
    {
      "parameters": {
        "functionCode": "// This function would log the error\nconst error = $input.all()[0].json.message;\n\n// Log error\nconsole.log(`Error fetching quiz data: ${error}`);\n\nreturn [\n  {\n    json: {\n      logged: true,\n      error: error,\n      timestamp: new Date().toISOString()\n    }\n  }\n];"
      },
      "name": "Log Error",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1100,
        400
      ]
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Fetch Quiz Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Quiz Data": {
      "main": [
        [
          {
            "node": "Check Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Response": {
      "main": [
        [
          {
            "node": "Process Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Process Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Success": {
      "main": [
        [
          {
            "node": "Process Quiz Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Error": {
      "main": [
        [
          {
            "node": "Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}